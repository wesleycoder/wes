---
import { db, dz, linkTable } from '@wes/db'
import type { GetStaticPaths } from 'astro'

export const dynamic = 'force-dynamic'

export const getStaticPaths = (async () => {
  const links = await db.query.linkTable.findMany()
  return links.map((link) => ({ params: { linkId: link.id } }))
}) satisfies GetStaticPaths

const { linkId } = Astro.params

if (!linkId) return Astro.redirect('/404', 301)

const links = await db.select().from(linkTable).where(dz.eq(linkTable.id, linkId)).limit(1)

if (!links.length) {
  return notFound()
}

const linkUrl = links[0].url

await db
  .update(linkTable)
  .set({ views: dz.sql`${linkTable.views} + 1` })
  .where(dz.eq(linkTable.id, linkId))

const response = Astro.redirect(linkUrl, 301)
response.headers.set('Cache-Control', 'no-store,no-cache,must-revalidate,max-age=0')
return response
---
